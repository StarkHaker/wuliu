/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2018-03-03 08:59:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.driver;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/common/common.jsp", Long.valueOf(1511510250091L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");

	String path = request.getContextPath();
	String basePath = request.getScheme() + "://"
			+ request.getServerName() + ":" + request.getServerPort()
			+ path + "/";
	request.setAttribute("basePath", basePath);
	String realPath=request.getSession().getServletContext().getRealPath("/");
	request.setAttribute("sessionname", request.getSession().getAttribute("username"));

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\">\r\n");
      out.write("<link rel=\"icon\" href=\"images/logo.ico\">\r\n");
      out.write("<title>XXXX物流-注册页面</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/login.css\" />\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"register-container\">\r\n");
      out.write("\t<h1>司机注册</h1>\r\n");
      out.write("\t<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("app/driver/regist\" method=\"post\" id=\"registerForm\">\r\n");
      out.write("    \t<div>\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"cezuDH\" name=\"cezuDH\" class=\"phone_number\" placeholder=\"输入手机号码\" autocomplete=\"off\" id=\"number\"/>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("        <div>\r\n");
      out.write("\t\t\t<input type=\"password\" id=\"cezuMM\" name=\"cezuMM\" class=\"password\" placeholder=\"输入密码\" oncontextmenu=\"return false\" onpaste=\"return false\" />\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<input type=\"password\" id=\"cezuMM\" name=\"cezuMM\" class=\"confirm_password\" placeholder=\"再次输入密码\" oncontextmenu=\"return false\" onpaste=\"return false\" />\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"cezuMZ\" name=\"cezuMZ\" class=\"username\" placeholder=\"真实姓名\" autocomplete=\"off\"/>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("        <div>\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"cezuID\" name=\"cezuID\" class=\"id\" placeholder=\"输入身份证号码\" oncontextmenu=\"return false\" onpaste=\"return false\" />\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- \r\n");
      out.write("        <div>\r\n");
      out.write("\t\t\t<input type=\"\" name=\"email\" class=\"\" placeholder=\"输入手机验证码\" style=\"width:170px;\" />\r\n");
      out.write("            <button type=\"button\" style=\"width:90px;\">点击获取</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t -->\r\n");
      out.write("        <div>\r\n");
      out.write("        \t<input type=\"text\" id=\"\" name=\"qiceCP\" placeholder=\"输入汽车车牌\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div>\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"\" name=\"qiceXH\" class=\"cell_number\" placeholder=\"输入汽车型号\" autocomplete=\"off\" id=\"number\"/>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("        <div style=\"float:left; margin-top:10px;\">\r\n");
      out.write("\t\t\t注册即代表同意<a href=\"agreement.html\" target=\"_blank\">&laquo;会员注册协议&raquo;</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<button id=\"submit\" type=\"submit\">注 册</button>\r\n");
      out.write("        <button type=\"reset\" style=\"background:#F0AD4E;\">重 置</button>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<a href=\"login.jsp\">\r\n");
      out.write("\t\t<button type=\"button\" class=\"register-tis\">已经有账号？</button>\r\n");
      out.write("\t</a>\r\n");
      out.write("</div>\r\n");
      out.write("<script src=\"js/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"js/common.js\"></script>\r\n");
      out.write("<!--背景图片自动更换-->\r\n");
      out.write("<script src=\"js/supersized.3.2.7.min.js\"></script>\r\n");
      out.write("<script src=\"js/supersized-init.js\"></script>\r\n");
      out.write("<!--表单验证-->\r\n");
      out.write("<script src=\"js/jquery.validate.min.js?var1.14.0\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
